version: "3.8"

networks:
  apps:
    name: main

services:

  # data

  redis:
    image: redis/redis-stack-server:latest
    restart: always
    command: "exec redis-server --requirepass \"$REDIS_PASSWORD\" --save 60 1 --loglevel warning"
    ports: [ 6379 ]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD:-test}
      - REDIS_REPLICATION_MODE=master
      - REDIS_ARGS="--requirepass \"$REDIS_PASSWORD\" --save 60 1 --loglevel warning"
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  postgres:
    build: ./postgres
    image: postgres:15beta2-alpine3.16
    restart: always
    ports: [ 5432 ]
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-test}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-test}
      - POSTGRES_DB=${POSTGRES_DB:-test}
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  rabbitmq:
    build: ./rabbitmq
    restart: always
    ports: [ 5672, 15672, 15692 ]
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER:-test}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-test}
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  eventstore:
    image: eventstore/eventstore:21.10.9-alpha-arm64v8
    restart: always
    ports: [ 1113, 2113 ]
    environment:
      - EVENTSTORE_USER=${EVENTSTORE_USER:-admin}
      - EVENTSTORE_PASSWORD=${EVENTSTORE_PASSWORD:-changeit}
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  minio:
    image: minio/minio:latest
    command: "server /data --console-address ':9001'"
    ports: [ 9000, 9001 ]
    environment:
      - MINIO_ROOT_USER=${MINIO_USER:-test}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-test}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-test}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-test}
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  # apps

  project-query-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=project-query-service
    image: taskapp/project-query-service:latest
    restart: on-failure
    ports: [ 8001:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/projects
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
    depends_on:
      - postgres
      - eventstore
      - rabbitmq
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  project-command-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=project-command-service
    image: taskapp/project-command-service:latest
    restart: on-failure
    ports: [ 8002:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-query-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=project-query-service
    image: taskapp/issue-query-service:latest
    restart: on-failure
    ports: [ 8003:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/issues
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
    depends_on:
      - postgres
      - eventstore
      - rabbitmq
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-command-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=project-command-service
    image: taskapp/issue-command-service:latest
    restart: on-failure
    ports: [ 8004:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  member-query-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=member-query-service
    image: taskapp/member-query-service:latest
    restart: on-failure
    ports: [ 8005:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/users
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
    depends_on:
      - postgres
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  member-command-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=member-command-service
    image: taskapp/member-command-service:latest
    restart: on-failure
    ports: [ 8006:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  search-query-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=search-query-service
    image: taskapp/search-query-service:latest
    restart: on-failure
    ports: [ 8007:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/search
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-admin}:${EVENTSTORE_PASSWORD:-changeit}@eventstore:1113
    depends_on:
      - postgres
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  report-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=report-service
    image: taskapp/report-service:latest
    restart: on-failure
    ports: [ 8008:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/issues
    depends_on:
      - postgres
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  user-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=user-service
    image: taskapp/user-service:latest
    restart: on-failure
    ports: [ 8009:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/users
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  notification-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=notification-service
    image: taskapp/notification-service:latest
    restart: on-failure
    ports: [ 8010:3000 ]
    environment:
      - SMTP_URL=smtp://${SMTP_USER}:${SMTP_PASSWORD}@${SMTP_HOST}
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/notifications
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  billing-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=billing-service
    image: taskapp/billing-service:latest
    restart: on-failure
    ports: [ 8011:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/billing
    depends_on:
      - postgres
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  auth-service:
    build:
      context: .
      target: deploy
      args:
        - SERVICE_NAME=auth-service
    image: taskapp/auth-service:latest
    restart: on-failure
    ports: [ 8012:3000 ]
    environment:
      - AUTH_ACCESS_TOKEN_LIFESPAN=${AUTH_ACCESS_TOKEN_LIFESPAN:-3600};
      - AUTH_REFRESH_TOKEN_LIFESPAN=${AUTH_REFRESH_TOKEN_LIFESPAN:-2419200};
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:30}
    depends_on:
      - redis
      - user-service
      - member-query-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  gateway:
    build: ./apps/gateway
    image: taskapp/gateway:latest
    restart: on-failure
    ports: [ 80, 443 ]
    volumes:
      - ./apps/gateway/nginx:/etc/nginx:ro
      - ./apps/gateway/jaeger-config.json:/etc/jaeger-config.json:ro
      - ./apps/gateway/swagger-ui:/var/www/swagger-ui:ro
      # - ./apps/web/dist:/usr/share/nginx/html:ro
    environment:
      - HOST=${HOST:-localhost}
      - API_VERSION=${API_VERSION:-v1}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:30}
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/conf.d
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224
  # web:
  #   build:
  #     context: ./packages/apps/web
  #     target: build # production
  #   env_file: ./.env.dev
  #   restart: unless-stopped
  #   command: yarn dev
  #   ports: [ 3000 ]
  #   volumes:
  #     - ./packages/apps/web:/usr/src/app
  #     - /usr/src/app/node_modules
  #   environment:
  #     - NODE_OPTIONS=--openssl-legacy-provider
  #     - SKIP_PREFLIGHT_CHECK=true
  #     - CHOKIDAR_USEPOLLING=true
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-test}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-test}
