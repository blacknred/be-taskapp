version: "3.8"

networks:
  apps:
    name: main

services:

  user-service:
    build:
      context: ./packages/apps/user
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8001:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/user:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=user-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/users
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  auth-service:
    build:
      context: ./packages/apps/auth
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8002:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/auth:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=auth-service
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
      - AUTH_ACCESS_TOKEN_LIFESPAN=${AUTH_ACCESS_TOKEN_LIFESPAN:-3600};
      - AUTH_REFRESH_TOKEN_LIFESPAN=${AUTH_REFRESH_TOKEN_LIFESPAN:-2419200};
    depends_on:
      - postgres
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  notification-service:
    build:
      context: ./packages/apps/notification
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8003:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/notification:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=notification-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/notifications
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
      - SMTP_URL=smtp://${SMTP_USER}:${SMTP_PASSWORD}@${SMTP_HOST}
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  billing-service:
    build:
      context: ./packages/apps/billing
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8004:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/billing:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=billing-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/billing
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  project-service:
    build:
      context: ./packages/apps/project
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8005:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/project:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=project-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/projects
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - member-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  member-service:
    build:
      context: ./packages/apps/member
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8006:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/member:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=member-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/members
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  sprint-service:
    build:
      context: ./packages/apps/sprint
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8007:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/sprint:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=sprint-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/sprints
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - member-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-service:
    build:
      context: ./packages/apps/issue
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8008:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/issue:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=issue-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/issues
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - member-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  favorite-service:
    build:
      context: ./packages/apps/favorite
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8009:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/favorite:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=favorite-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/favorites
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - member-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  watchlist-service:
    build:
      context: ./packages/apps/watchlist
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8010:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/watchlist:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=watchlist-service
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/watchlist
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - member-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  search-service:
    build:
      context: ./packages/apps/search
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8011:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/search:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=search-service
    depends_on:
      - member-service
      - issue-service
      - sprint-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  report-service:
    build:
      context: ./packages/apps/report
      target: build # production
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 8012:3000 ]
    command: yarn start:dev
    volumes:
      - ./packages/apps/report:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
    environment:
      - NODE_ENV=development
      - SERVICE_NAME=report-service
      - ISSUE_POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/issues
      - SPRINT_POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@db:5432/sprints
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  minio:
    image: minio/minio:latest
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    command: "server /data --console-address ':9001'"
    ports: [ 9000, 9001 ]
    volumes:
      - ./minio/data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER:-test}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-test}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-test}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-test}
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  nginx:
    build: ./nginx
    env_file: ./.env.dev
    restart: on-failure
    networks: [ apps ]
    ports: [ 80, 443 ]
    volumes:
      - ./nginx/nginx:/etc/nginx:ro
      - ./nginx/jaeger-config.json:/etc/jaeger-config.json:ro
      - ./nginx/swagger-ui:/var/www/swagger-ui:ro
      - ./packages/services/web/dist:/usr/share/nginx/html:ro
    environment:
      - HOST=${HOST:-localhost}
      - API_VERSION=${API_VERSION:-v1}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:60}
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/conf.d
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  web:
    build:
      context: ./packages/apps/web
      target: build # production
    env_file: ./.env.dev
    restart: unless-stopped
    command: yarn dev
    ports: [ 3000 ]
    volumes:
      - ./packages/apps/web:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
      - SKIP_PREFLIGHT_CHECK=true
      - CHOKIDAR_USEPOLLING=true
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-test}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-test}
