location /api/$api_version/auth {
    set $api_name "Auth";

    # Logging
    access_log /var/log/nginx/auth_api.log api;

    # No auth
    auth_request off;

    # Tracing
    opentracing_propagate_context;

    # Proxying
    proxy_pass http://auth$request_uri;
}  

location = /_auth {
    # Internal GET auth check, users can't access this path
    internal;

    # No logging
    access_log off;

    # No auth
    auth_request off;

    # Tracing
    opentracing_propagate_context;

    # Ignores body
    proxy_pass_request_body off;
    proxy_set_header Content-Length "";
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Host       $host;
    proxy_set_header X-Real-IP  $remote_addr;

    # Proxying (expects only 2xx status, otherwise is rejecting)
    proxy_pass http://sso;
    # if there is allowed_groups or allowed_roles in upstream headers
    # rewrite ^ /_auth?allowed_groups=mygroup break;



    # creates global api_client_name variable by mapping apikey HTTP header to user_id
    # map $http_apikey $api_user_id {
    #     default "";
    #     "7B5zIqmRGXmrJTFmKa99vcit" "1";
    #     "QzVV6y1EmQFbbxOfRCwyJs35" "2";
    #     "mGcjH8Fv6U9y3BVF9H3Ypb9T" "3";
    # }
    # # If this header is missing or empty
    # if ($http_apikey = "") {
    #     return 401; # Unauthenticated
    # }
    # # API key does not match any of the keys in the map block
    # if ($api_user_id = "") {
    #     return 403; # Forbidden
    # }
    # return 204; # OK (no content)
}
