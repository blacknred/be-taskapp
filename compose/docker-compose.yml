version: '3.9'

networks:
  apps:
    name: main

volumes:
  redis_data:
  postgres_data:
  rabbitmq_data:
  eventstore_data:
  minio_data:

services:
  # data

  redis:
    image: redis/redis-stack-server:latest
    restart: always
    networks: [apps]
    ports: [6379]
    volumes:
      - redis_data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_ARGS="--requirepass \"$REDIS_PASSWORD\" --save 60 100 --loglevel warning"
      - REDIS_PASSWORD=${REDIS_PASSWORD:-test}
    healthcheck:
      test: exit 0

  postgres:
    image: postgres:15beta2-alpine3.16
    restart: always
    networks: [apps]
    ports: [5432]
    volumes:
      - ./postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-test}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-test}
    healthcheck:
      test: exit 0

  rabbitmq:
    image: rabbitmq:management-alpine
    restart: always
    networks: [apps]
    ports: [5672, 15672, 15692]
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_delayed_message_exchange rabbitmq_prometheus
      && chmod +x /init.sh
      && /init.sh"
    volumes:
      - ./rabbitmq/plugins/:/opt/rabbitmq/plugins/
      - ./rabbitmq/init.sh:/init.sh
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_PID_FILE=/var/lib/rabbitmq/mnesia/rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER:-test}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-test}
    healthcheck:
      test: exit 0

  eventstore:
    image: eventstore/eventstore:21.10.9-alpha-arm64v8
    restart: always
    networks: [apps]
    ports: [1113, 2113]
    volumes:
      - eventstore_data:/var/lib/eventstore
    environment:
      - EVENTSTORE_USER=${EVENTSTORE_USER:-test}
      - EVENTSTORE_PASSWORD=${EVENTSTORE_PASSWORD:-test}
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    healthcheck:
      test: exit 0

  minio:
    image: minio/minio:latest
    restart: always
    networks: [infra]
    ports: [9000, 9001]
    command: >
      bash -c "server /data --console-address ':9001''"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=${MINIO_USER:-test}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-test}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-test}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-test}
    healthcheck:
      test: exit 0

  mc:
    image: minio/mc:latest
    restart: unless-stopped
    networks: [infra]
    entrypoint: >
      /bin/sh -c "/usr/bin/mc config host add myminio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD};
      && /usr/bin/mc rm -r --force myminio/loki;
      && /usr/bin/mc mb myminio/loki;
      && /usr/bin/mc policy set public myminio/loki;
      && exit 0;"
    environment:
      - MINIO_ROOT_USER=${MINIO_USER:-test}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD:-test}
    healthcheck:
      test: exit 0
    depends_on:
      - minio

  # sso

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    restart: always
    networks: [apps]
    ports: [8000:8080, 8443]
    command: start --optimized --import-realm
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
      - ./keycloak/keycloak-magic-link-0.19.jar:/opt/keycloak/providers/keycloak-magic-link-0.19.jar
          
      - KC_PROXY=edge
      - KEYCLOAK_ADMIN=${KEYCLOAK_USER:-test}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_PASSWORD:-test}
      - KC_METRICS_ENABLED=true # https://localhost:8000/metrics
      - KC_HEALTH_ENABLED=true # https://localhost:8000/health
      - KC_DB=postgres
      - KC_DB_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@postgres:5432/workspace
      - KC_DB_USERNAME=${POSTGRES_USER:-test}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD:-test}
    depends_on:
      - postgres
    healthcheck:
      test: exit 0

  sso-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    restart: always
    networks: [apps]
    ports: [4180]
    environment:
      - OAUTH2_PROXY_HTTP_ADDRESS=0.0.0.0:4180
      - OAUTH2_PROXY_COOKIE_SECRET=${SECRET:-test}
      - OAUTH2_PROXY_PROVIDER=oid
      - OAUTH2_PROXY_CLIENT_ID=sso-proxy
      - OAUTH2_PROXY_CLIENT_SECRET=${SECRET:-test}
      - OAUTH2_PROXY_EMAIL_DOMAINS=*
      - OAUTH2_PROXY_OIDC_ISSUER_URL=http://keycloak:8000/realms/master'
      - OAUTH2_PROXY_REDIRECT_URL=http://keycloak:8000/oauth2/callback'
      - OAUTH2_PROXY_INSECURE_OIDC_ALLOW_UNVERIFIED_EMAIL=true # skip email validation
      - OAUTH2_PROXY_OIDC_EMAIL_CLAIM=sub # skip email validation
      - OAUTH2_PROXY_SET_XAUTHREQUEST=true # set response header with user data
      - OAUTH2_PROXY_PASS_USER_HEADERS=true
      - OAUTH2_PROXY_PASS_ACCESS_TOKEN=true
    depends_on:
      - keycloak
    healthcheck:
      test: exit 0

  # monitoring

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    restart: always
    networks: [apps]
    ports: [24224, 24224:24224/udp]
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    environment:
      - LOKI_URL=http://${LOKI_HOST:-loki}:3100/loki/api/v1/push
    healthcheck:
      test: exit 0

  # apps

  gateway:
    restart: always
    networks: [apps]
    ports: [80, 443, 8080]
    environment:
      - API_VERSION=${API_VERSION:-v1}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/conf.d
      - HOST=${HOST}
      - MINIO_HOST=${MINIO_HOST:-minio}
      - KEYCLOAK_HOST=${KEYCLOAK_HOST:-keycloak}
      - SSO_PROXY_HOST=${SSO_PROXY_HOST:-sso-proxy}
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  workspace-svc:
    restart: always
    networks: [apps]
    ports: [3001:3000, 50051]
    environment:
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:-30}
      - KEYCLOAK_URL=http://${KEYCLOAK_HOST:-keycloak}:8000/realms/master
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@${RABBITMQ_HOST:-rabbitmq}:5672
    depends_on:
      - keycloak
      - rabbitmq
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-command-svc:
    restart: always
    networks: [apps]
    ports: [3002:3000, 50052]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-test}:${EVENTSTORE_PASSWORD:-test}@${EVENTSTORE_HOST:-eventstore}:1113
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@${RABBITMQ_HOST:-rabbitmq}:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@${REDIS_HOST:-redis}:6379
    depends_on:
      - eventstore
      - rabbitmq
      - redis
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-query-svc:
    restart: always
    networks: [apps]
    ports: [3003:3000, 50053]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@${POSTGRES_HOST:-postgres}:5432
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER:-test}:${EVENTSTORE_PASSWORD:-test}@${EVENTSTORE_HOST:-eventstore}:1113
    depends_on:
      - postgres
      - eventstore
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  notification-svc:
    restart: always
    networks: [apps]
    ports: [3004:3000, 50054]
    environment:
      - SMTP_URL=smtp://${SMTP_USER:-test}:${SMTP_PASSWORD:-test}@${SMTP_HOST:-test}
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@${POSTGRES_HOST:-postgres}:5432
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@${RABBITMQ_HOST:-rabbitmq}:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@${REDIS_HOST:-redis}:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  search-svc:
    restart: always
    networks: [apps]
    ports: [3005:3000, 50055]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@${POSTGRES_HOST:-postgres}:5432
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@${RABBITMQ_HOST:-rabbitmq}:5672
    depends_on:
      - postgres
      - rabbitmq
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  report-svc:
    restart: always
    networks: [apps]
    ports: [3006:3000, 50056]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER:-test}:${POSTGRES_PASSWORD:-test}@${POSTGRES_HOST:-postgres}:5432
      - RABBITMQ_URL=amqp://${RABBITMQ_USER:-test}:${RABBITMQ_PASSWORD:-test}@${RABBITMQ_HOST:-rabbitmq}:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD:-test}@${REDIS_HOST:-redis}:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
      - fluent-bit
    healthcheck:
      test: exit 0
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224
