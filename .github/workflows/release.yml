name: release

on:
  release:
    types: [published]
    workflow_dispatch: # allow manual trigger

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        # multiarch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        # build only changed services
      - name: Filter
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            project-query-svc:
              - 'apps/project-query-svc/**'
            project-command-svc:
              - 'apps/project-command-svc/**'
            issue-query-svc:
              - 'apps/issue-query-svc/**'
            issue-command-svc:
              - 'apps/issue-command-svc/**'
            member-query-svc:
              - 'apps/member-query-svc/**'
            member-command-svc:
              - 'apps/member-command-svc/**'
            search-svc:
              - 'apps/search-svc/**'
            report-svc:
              - 'apps/report-svc/**'
            account-svc:
              - 'apps/account-svc/**'
            notification-svc:
              - 'apps/notification-svc/**'
            billing-svc:
              - 'apps/billing-svc/**'
            auth-svc:
              - 'apps/auth-svc/**'
            gateway:
              - 'apps/gateway/**'
      - name: Build and push project-query-svc
        if: steps.filter.outputs.project-query-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=project-query-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/project-query-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/project-query-svc:latest
      - name: Build and push project-command-svc
        if: steps.filter.outputs.project-command-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=project-command-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/project-command-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/project-command-svc:latest
      - name: Build and push issue-query-svc
        if: steps.filter.outputs.issue-query-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=issue-query-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/issue-query-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/issue-query-svc:latest
      - name: Build and push issue-command-svc
        if: steps.filter.outputs.issue-command-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=issue-command-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/issue-command-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/issue-command-svc:latest
      - name: Build and push member-query-svc
        if: steps.filter.outputs.member-query-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=member-query-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/member-query-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/member-query-svc:latest
      - name: Build and push member-command-svc
        if: steps.filter.outputs.member-command-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=member-command-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/member-command-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/member-command-svc:latest
      - name: Build and push search-svc
        if: steps.filter.outputs.search-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=search-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/search-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/search-svc:latest
      - name: Build and push report-svc
        if: steps.filter.outputs.report-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=report-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/report-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/report-svc:latest
      - name: Build and push account-svc
        if: steps.filter.outputs.account-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=account-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/account-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/account-svc:latest
      - name: Build and push notification-svc
        if: steps.filter.outputs.notification-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=notification-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/notification-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/notification-svc:latest
      - name: Build and push billing-svc
        if: steps.filter.outputs.billing-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=billing-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/billing-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/billing-svc:latest
      - name: Build and push auth-svc
        if: steps.filter.outputs.auth-svc == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            SERVICE_NAME=auth-svc
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-svc:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/auth-svc:latest
      - name: Build and push gateway
        if: steps.filter.outputs.gateway == 'true'
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./apps/gateway
          file: ./apps/gateway/Dockerfile
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/gateway:${{ github.event.release.tag_name }}
            ${{ secrets.DOCKERHUB_USERNAME }}/gateway:latest
            - name: "Run deploy"
      - name: "Testing"
        run: echo 'not implemented'
      - name: "Run deploy"
        run: echo 'not implemented'
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.SERVER_HOST }}
#         username: ${{ secrets.SERVER_USERNAME }}
#         key: ${{ secrets.SERVER_KEY }}
#         port: ${{ secrets.SERVER_PORT }}
#         script: |
#           sudo docker-compose -f docker-compose.prod-ci.yml -p prod pull
#           sudo docker-compose -f docker-compose.prod-ci.yml -p prod up -d
