############
# BACKENDS #
############
include api_backends.conf;

###################
# SESSION MOCKING #
###################
include api_session.conf;

####################
# DDoS MITIGATIONS #
####################
# RATE LIMITING OF REQUESTS
# 1 req/sec for each client IP address
limit_req_zone $binary_remote_addr zone=client_ip_1rs:1m rate=1r/s;
# 20 req/sec for each authenticated client ID
limit_req_zone $http_apikey        zone=apikey_20rs:1m   rate=20r/s;
# by default NGINX returns 503 Unavailable for all clients that excess the limit
limit_req_status 429;
# LIMITING THE NUMBER OF CONNECTIONS
limit_conn_zone $binary_remote_addr zone=conlim:10m; #(~80k keys)
# DROP LONG LIVED CONNECTIONS (default is 60 sec)
client_body_timeout 5s;
client_header_timeout 5s;
# RANGE-BASED ATTACKS
proxy_set_header Range "";
# HIDE NGINX VERSION
server_tokens off;
# ALLOWLISTING
# block all requests in which the User-Agent header is set to a value that does not correspond to normal client traffic
# if ($http_user_agent ~* foo|bar) {
#     return 403;
# }
# block all requests in which the Referer header is set to a value that can be associated with an attack
# block all requests in which other headers have values that can be associated with an attack
# Denylisting and Allowlist IP Addresses
# deny 123.123.123.3;
# deny 123.123.123.0/28; # range
# allow 192.168.1.0/24; # range
# deny all;# all, e.g block all requests to a specific URL that seems to be targeted

###########
# CACHING #
###########

###########
# SERVER #
###########
server {
    ##################
    # GLOBAL LOGGING #
    ##################
    access_log /var/log/nginx/api_access.log main; 

    listen 443 ssl;
    server_name localhost #api.example.com;

    #######
    # TLS #
    #######
    ssl_certificate      /etc/ssl/certs/api.example.com.crt;
    ssl_certificate_key  /etc/ssl/private/api.example.com.key;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.2 TLSv1.3;

    ################
    # BASE HEADERS #
    ################
    # proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header Application-Name secrets;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    # HELMET HEADERS
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'";

    ####################
    # HANDLE "OPTIONS" #
    ####################
    if ($request_method = 'OPTIONS') {
        # CORS
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS';
        add_header 'Access-Control-Max-Age'        86400;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain; charset=UTF-8';
        return 204;
    }

    ###################
    # API DEFINITIONS #
    ###################
    # Versioning
    # rewrite ^/api/v1/(.*)  /api/v2/$1;     
        expires max;

    client_max_body_size 16k; # 1m by default

    ##################
    # ERROR HANDLING #
    ##################
    error_page 404 = @400;         # Treat invalid paths as bad requests
    proxy_intercept_errors on;     # Do not send backend errors to client
    include api_json_errors.conf;  # API client-friendly JSON errors
    default_type application/json; # If no content-type, assume JSON
}