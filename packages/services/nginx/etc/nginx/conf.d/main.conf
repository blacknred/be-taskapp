# Api logging
log_format api '$remote_addr - $remote_user [$time_local] "$request" '
'$status $body_bytes_sent "$http_referer" '
'"$http_user_agent" "$http_x_forwarded_for" "$api_name"'
'$request_time $upstream_response_time $pipe'

# Zones
limit_req_zone $binary_remote_addr zone=main:1m rate=$main_rate_limit;
limit_req_zone $http_authorization zone=auth:1m rate=$auth_rate_limit;
limit_conn_zone $binary_remote_addr zone=main:10m; # ~80k keys

# Caching
# Cache SSL session params to avoid SSL handshakes for parallel and subsequent connections
ssl_session_cache shared:SSL:10m; #(~40k sessions)
ssl_session_timeout 10m;

# Backends
include api_gateway/backends.conf;
include infrastructure/backends.conf;

server {
    resolver 127.0.0.1;
    listen 443 ssl;
    server_name $server_name;

    # TLS
    ssl_certificate      ssl/cert.pem;
    ssl_certificate_key  ssl/key.pem;
    ssl_session_cache    shared:SSL:10m;
    ssl_session_timeout  5m;
    ssl_ciphers          HIGH:!aNULL:!MD5;
    ssl_protocols        TLSv1.2 TLSv1.3;

    # Logging
    access_log /var/log/nginx/api_access.log api;

    # Base headers
    # proxy_redirect off;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_set_header X-Forwarded-Proto $scheme;
    add_header X-Response-Time $upstream_response_time;
    add_header Application-Name secrets;
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";

    # Security(ddos, helmet, cors)
    # Rate limiting
    limit_req zone=main;
    limit_req zone=auth;
    limit_req_status 429; # 503 by default
    # Requests limiting
    limit_conn main $conn_limit;
    # Bandwidth limiting
    limit_rate_after $bandwidth_limit_threshold;
    limit_rate $bandwidth_limit;
    # Request body limiting
    client_max_body_size $body_limit;
    # Drop long-lived connections 
    client_body_timeout $request_timeout;
    client_header_timeout $request_timeout;
    # Keep-alive timeout
    keepalive_timeout $keepalive_timeout;
    # Hide Nginx version
    server_tokens off;
    # Allowlist
    if ($blocked_ip_range) {
        deny $blocked_ip_range;
    }
    if ($allowed_ip_range) {
        allow $allowed_ip_range;
        deny all;
    }
    if ($http_referrer ~* $blocked_referrer) {
        return 403;
    }
    if ($http_user_agent ~* $blocked_user_agent) {
        return 403;
    }
    # Helmet headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'";
    add_header Referrer-Policy "no-referrer";
    # Range based attacks
    proxy_set_header Range "";
    # CORS
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' "$http_origin" always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, PUT, POST, DELETE, OPTIONS';
        add_header 'Access-Control-Max-Age'        86400;
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain; charset=UTF-8';
        return 204;
    }

    ##########
    # STATIC #
    ##########
    include static/*.conf;

    ##################
    # INFRASTRUCTURE #
    ##################
    include infrastructure/main.conf;

    ################
    # API GATEAWAY #
    ################
    include api_gateway/main.conf;
}