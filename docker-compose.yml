version: "3.8"

networks:
  apps:
    name: main
  monitoring:
    name: main

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

services:

  # data

  redis:
    image: redis/redis-stack-server:latest
    networks: [ apps ]
    ports: [ 6379 ]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_REPLICATION_MODE=master
      - REDIS_ARGS="--requirepass \"$REDIS_PASSWORD\" --save 60 100 --loglevel warning"
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  postgres:
    build: ./postgres
    image: postgres:15beta2-alpine3.16
    networks: [ apps ]
    ports: [ 5432 ]
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  rabbitmq:
    build: ./rabbitmq
    networks: [ apps ]
    ports: [ 5672, 15672, 15692 ]
    environment:
      - RABBITMQ_USER=${RABBITMQ_USER}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  eventstore:
    image: eventstore/eventstore:21.10.9-alpha-arm64v8
    networks: [ apps ]
    ports: [ 1113, 2113 ]
    environment:
      - EVENTSTORE_USER=${EVENTSTORE_USER}
      - EVENTSTORE_PASSWORD=${EVENTSTORE_PASSWORD}
      - EVENTSTORE_CLUSTER_SIZE=1
      - EVENTSTORE_RUN_PROJECTIONS=all
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
      - EVENTSTORE_EXT_TCP_PORT=1113
      - EVENTSTORE_EXT_HTTP_PORT=2113
      - EVENTSTORE_INSECURE=true
      - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
      - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  minio:
    image: minio/minio:latest
    networks: [ apps ]
    command: "server /data --console-address ':9001'"
    ports: [ 9000, 9001 ]
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  mc:
    image: minio/mc:latest
    networks: [ apps ]
    entrypoint: >
      /bin/sh -c " /usr/bin/mc config host add myminio http://minio:9000 ${MINIO_USER} ${MINIO_PASSWORD}; /usr/bin/mc rm -r --force myminio/loki; /usr/bin/mc mb myminio/loki; /usr/bin/mc policy set public myminio/loki; exit 0; "
    environment:
      - MINIO_ROOT_USER=${MINIO_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    depends_on:
      - minio

  # apps

  project-query-service:
    image: taskapp/project-query-service:latest
    networks: [ apps ]
    ports: [ 8001:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/projects
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - eventstore
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  project-command-service:
    image: taskapp/project-command-service:latest
    networks: [ apps ]
    ports: [ 8002:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-query-service:
    image: taskapp/issue-query-service:latest
    networks: [ apps ]
    ports: [ 8003:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/issues
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - eventstore
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  issue-command-service:
    image: taskapp/issue-command-service:latest
    networks: [ apps ]
    ports: [ 8004:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  member-query-service:
    image: taskapp/member-query-service:latest
    networks: [ apps ]
    ports: [ 8005:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/members
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - eventstore
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  member-command-service:
    image: taskapp/member-command-service:latest
    networks: [ apps ]
    ports: [ 8006:3000 ]
    environment:
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
    depends_on:
      - eventstore
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  search-service:
    image: taskapp/search-service:latest
    networks: [ apps ]
    ports: [ 8007:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/search
      - EVENTSTORE_URL=esdb://${EVENTSTORE_USER}:${EVENTSTORE_PASSWORD}@eventstore:1113
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - eventstore
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  report-service:
    image: taskapp/report-service:latest
    networks: [ apps ]
    ports: [ 8008:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/issues
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  account-service:
    image: taskapp/account-service:latest
    networks: [ apps ]
    ports: [ 8009:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/accounts
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  notification-service:
    image: taskapp/notification-service:latest
    networks: [ apps ]
    ports: [ 8010:3000 ]
    environment:
      - SMTP_URL=smtp://${SMTP_USER}:${SMTP_PASSWORD}@${SMTP_HOST}
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/notifications
      - RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@rabbitmq:5672
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - rabbitmq
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  billing-service:
    image: taskapp/billing-service:latest
    networks: [ apps ]
    ports: [ 8011:3000 ]
    environment:
      - POSTGRES_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/billing
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
    depends_on:
      - postgres
      - redis
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  auth-service:
    image: taskapp/auth-service:latest
    networks: [ apps ]
    ports: [ 8012:3000 ]
    environment:
      - AUTH_ACCESS_TOKEN_LIFESPAN=${AUTH_ACCESS_TOKEN_LIFESPAN:-3600};
      - AUTH_REFRESH_TOKEN_LIFESPAN=${AUTH_REFRESH_TOKEN_LIFESPAN:-2419200};
      - REDIS_URL=redis://:${REDIS_PASSWORD}@redis:6379
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:30}
    depends_on:
      - redis
      - account-service
      - member-query-service
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  gateway:
    image: taskapp/gateway:latest
    networks: [ apps ]
    ports: [ 80, 443 ]
    environment:
      - API_VERSION=${API_VERSION:-v1}
      - REQUEST_TIMEOUT=${REQUEST_TIMEOUT:30}
      - NGINX_ENTRYPOINT_QUIET_LOGS=1
      - NGINX_ENVSUBST_TEMPLATE_DIR=/etc/nginx/conf.d
    logging:
      driver: fluentd
      options:
        fluentd-address: fluent-bit:24224

  # web:
  #   image: taskapp/web:latest
  #   ports: [ 3000 ]
  #   environment:
  #     - NODE_OPTIONS=--openssl-legacy-provider
  #     - SKIP_PREFLIGHT_CHECK=true
  #     - CHOKIDAR_USEPOLLING=true
  #     - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
  #     - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
  #     - API_HOST=${HOST}

  # monitoring

  loki:
    image: grafana/loki:latest
    networks: [ monitoring ]
    ports: [ 3100 ]
    user: root
    command: -config.file=/etc/loki/config.yaml
    volumes:
      - ./monitoring/loki/config.yml:/etc/loki/config.yaml:ro
      - ./monitoring/loki/alerts.yml:/etc/loki/rules/alerts/rules.yml:ro
    environment:
      # the dot in the S3 address for MinIO is used because there is no need to specify AWS Region
      - MINIO_URL=http://${MINIO_USER}:${MINIO_PASSWORD}@minio.:9000/loki
    depends_on:
      - minio

  fluent-bit:
    image: grafana/fluent-bit-plugin-loki:latest
    networks: [ monitoring ]
    ports: [ 24224, 24224:24224/udp ]
    volumes:
      - ./monitoring/fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
    environment:
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    depends_on:
      - loki

  jaeger:
    image: jaegertracing/all-in-one:latest
    networks: [ monitoring ]
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778
      - 16686
      - 14268
      - 14250
      - 9411
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411

  prometheus:
    image: prom/prometheus:latest
    networks: [ monitoring ]
    ports: [ 9090 ]
    command:
      - "--config.file=/etc/prometheus/config.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--storage.tsdb.retention=7d"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    volumes:
      - prometeus_data:/prometheus
      - ./monitoring/prometheus/config.yml:/etc/prometheus/config.yml:ro
      - ./monitoring/prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    depends_on:
      - minio

  grafana:
    image: grafana/grafana:latest
    networks: [ monitoring ]
    ports: [ 3003:3000 ]
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml:ro
    environment:
      - GF_SECURITY_ADMIN_USER={GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD={GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    depends_on:
      - prometheus
      - jaeger
      - loki
